// AUTOGENERATED - DO NOT EDIT

package tdlib

import (
	"encoding/json"
	"fmt"
)

// ChatActionBar Describes actions which should be possible to do through a chat action bar
type ChatActionBar interface {
	GetChatActionBarEnum() ChatActionBarEnum
}

// ChatActionBarEnum Alias for abstract ChatActionBar 'Sub-Classes', used as constant-enum here
type ChatActionBarEnum string

// ChatActionBar enums
const (
	ChatActionBarReportSpamType              ChatActionBarEnum = "chatActionBarReportSpam"
	ChatActionBarReportUnrelatedLocationType ChatActionBarEnum = "chatActionBarReportUnrelatedLocation"
	ChatActionBarReportAddBlockType          ChatActionBarEnum = "chatActionBarReportAddBlock"
	ChatActionBarAddContactType              ChatActionBarEnum = "chatActionBarAddContact"
	ChatActionBarSharePhoneNumberType        ChatActionBarEnum = "chatActionBarSharePhoneNumber"
)

func unmarshalChatActionBar(rawMsg *json.RawMessage) (ChatActionBar, error) {

	if rawMsg == nil {
		return nil, nil
	}
	var objMap map[string]interface{}
	err := json.Unmarshal(*rawMsg, &objMap)
	if err != nil {
		return nil, err
	}

	switch ChatActionBarEnum(objMap["@type"].(string)) {
	case ChatActionBarReportSpamType:
		var chatActionBarReportSpam ChatActionBarReportSpam
		err := json.Unmarshal(*rawMsg, &chatActionBarReportSpam)
		return &chatActionBarReportSpam, err

	case ChatActionBarReportUnrelatedLocationType:
		var chatActionBarReportUnrelatedLocation ChatActionBarReportUnrelatedLocation
		err := json.Unmarshal(*rawMsg, &chatActionBarReportUnrelatedLocation)
		return &chatActionBarReportUnrelatedLocation, err

	case ChatActionBarReportAddBlockType:
		var chatActionBarReportAddBlock ChatActionBarReportAddBlock
		err := json.Unmarshal(*rawMsg, &chatActionBarReportAddBlock)
		return &chatActionBarReportAddBlock, err

	case ChatActionBarAddContactType:
		var chatActionBarAddContact ChatActionBarAddContact
		err := json.Unmarshal(*rawMsg, &chatActionBarAddContact)
		return &chatActionBarAddContact, err

	case ChatActionBarSharePhoneNumberType:
		var chatActionBarSharePhoneNumber ChatActionBarSharePhoneNumber
		err := json.Unmarshal(*rawMsg, &chatActionBarSharePhoneNumber)
		return &chatActionBarSharePhoneNumber, err

	default:
		return nil, fmt.Errorf("Error UnMarshaling, unknown type:" + objMap["@type"].(string))
	}
}

// ChatActionBarReportSpam The chat can be reported as spam using the method reportChat with the reason chatReportReasonSpam
type ChatActionBarReportSpam struct {
	tdCommon
	CanUnarchive bool `json:"can_unarchive"` // If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings
}

// MessageType return the string telegram-type of ChatActionBarReportSpam
func (chatActionBarReportSpam *ChatActionBarReportSpam) MessageType() string {
	return "chatActionBarReportSpam"
}

// NewChatActionBarReportSpam creates a new ChatActionBarReportSpam
//
// @param canUnarchive If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings
func NewChatActionBarReportSpam(canUnarchive bool) *ChatActionBarReportSpam {
	chatActionBarReportSpamTemp := ChatActionBarReportSpam{
		tdCommon:     tdCommon{Type: "chatActionBarReportSpam"},
		CanUnarchive: canUnarchive,
	}

	return &chatActionBarReportSpamTemp
}

// GetChatActionBarEnum return the enum type of this object
func (chatActionBarReportSpam *ChatActionBarReportSpam) GetChatActionBarEnum() ChatActionBarEnum {
	return ChatActionBarReportSpamType
}

// ChatActionBarReportUnrelatedLocation The chat is a location-based supergroup, which can be reported as having unrelated location using the method reportChat with the reason chatReportReasonUnrelatedLocation
type ChatActionBarReportUnrelatedLocation struct {
	tdCommon
}

// MessageType return the string telegram-type of ChatActionBarReportUnrelatedLocation
func (chatActionBarReportUnrelatedLocation *ChatActionBarReportUnrelatedLocation) MessageType() string {
	return "chatActionBarReportUnrelatedLocation"
}

// NewChatActionBarReportUnrelatedLocation creates a new ChatActionBarReportUnrelatedLocation
//
func NewChatActionBarReportUnrelatedLocation() *ChatActionBarReportUnrelatedLocation {
	chatActionBarReportUnrelatedLocationTemp := ChatActionBarReportUnrelatedLocation{
		tdCommon: tdCommon{Type: "chatActionBarReportUnrelatedLocation"},
	}

	return &chatActionBarReportUnrelatedLocationTemp
}

// GetChatActionBarEnum return the enum type of this object
func (chatActionBarReportUnrelatedLocation *ChatActionBarReportUnrelatedLocation) GetChatActionBarEnum() ChatActionBarEnum {
	return ChatActionBarReportUnrelatedLocationType
}

// ChatActionBarReportAddBlock The chat is a private or secret chat, which can be reported using the method reportChat, or the other user can be blocked using the method blockUser, or the other user can be added to the contact list using the method addContact
type ChatActionBarReportAddBlock struct {
	tdCommon
	CanUnarchive bool  `json:"can_unarchive"` // If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings
	Distance     int32 `json:"distance"`      // If non-negative, the current user was found by the peer through searchChatsNearby and this is the distance between the users
}

// MessageType return the string telegram-type of ChatActionBarReportAddBlock
func (chatActionBarReportAddBlock *ChatActionBarReportAddBlock) MessageType() string {
	return "chatActionBarReportAddBlock"
}

// NewChatActionBarReportAddBlock creates a new ChatActionBarReportAddBlock
//
// @param canUnarchive If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings
// @param distance If non-negative, the current user was found by the peer through searchChatsNearby and this is the distance between the users
func NewChatActionBarReportAddBlock(canUnarchive bool, distance int32) *ChatActionBarReportAddBlock {
	chatActionBarReportAddBlockTemp := ChatActionBarReportAddBlock{
		tdCommon:     tdCommon{Type: "chatActionBarReportAddBlock"},
		CanUnarchive: canUnarchive,
		Distance:     distance,
	}

	return &chatActionBarReportAddBlockTemp
}

// GetChatActionBarEnum return the enum type of this object
func (chatActionBarReportAddBlock *ChatActionBarReportAddBlock) GetChatActionBarEnum() ChatActionBarEnum {
	return ChatActionBarReportAddBlockType
}

// ChatActionBarAddContact The chat is a private or secret chat and the other user can be added to the contact list using the method addContact
type ChatActionBarAddContact struct {
	tdCommon
}

// MessageType return the string telegram-type of ChatActionBarAddContact
func (chatActionBarAddContact *ChatActionBarAddContact) MessageType() string {
	return "chatActionBarAddContact"
}

// NewChatActionBarAddContact creates a new ChatActionBarAddContact
//
func NewChatActionBarAddContact() *ChatActionBarAddContact {
	chatActionBarAddContactTemp := ChatActionBarAddContact{
		tdCommon: tdCommon{Type: "chatActionBarAddContact"},
	}

	return &chatActionBarAddContactTemp
}

// GetChatActionBarEnum return the enum type of this object
func (chatActionBarAddContact *ChatActionBarAddContact) GetChatActionBarEnum() ChatActionBarEnum {
	return ChatActionBarAddContactType
}

// ChatActionBarSharePhoneNumber The chat is a private or secret chat with a mutual contact and the user's phone number can be shared with the other user using the method sharePhoneNumber
type ChatActionBarSharePhoneNumber struct {
	tdCommon
}

// MessageType return the string telegram-type of ChatActionBarSharePhoneNumber
func (chatActionBarSharePhoneNumber *ChatActionBarSharePhoneNumber) MessageType() string {
	return "chatActionBarSharePhoneNumber"
}

// NewChatActionBarSharePhoneNumber creates a new ChatActionBarSharePhoneNumber
//
func NewChatActionBarSharePhoneNumber() *ChatActionBarSharePhoneNumber {
	chatActionBarSharePhoneNumberTemp := ChatActionBarSharePhoneNumber{
		tdCommon: tdCommon{Type: "chatActionBarSharePhoneNumber"},
	}

	return &chatActionBarSharePhoneNumberTemp
}

// GetChatActionBarEnum return the enum type of this object
func (chatActionBarSharePhoneNumber *ChatActionBarSharePhoneNumber) GetChatActionBarEnum() ChatActionBarEnum {
	return ChatActionBarSharePhoneNumberType
}
