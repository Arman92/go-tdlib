// AUTOGENERATED - DO NOT EDIT

package tdlib

// IDentityDocument An identity document
type IDentityDocument struct {
	tdCommon
	Number      string      `json:"number"`       // Document number; 1-24 characters
	ExpiryDate  *Date       `json:"expiry_date"`  // Document expiry date; may be null
	FrontSide   *DatedFile  `json:"front_side"`   // Front side of the document
	ReverseSide *DatedFile  `json:"reverse_side"` // Reverse side of the document; only for driver license and identity card
	Selfie      *DatedFile  `json:"selfie"`       // Selfie with the document; may be null
	Translation []DatedFile `json:"translation"`  // List of files containing a certified English translation of the document
}

// MessageType return the string telegram-type of IDentityDocument
func (iDentityDocument *IDentityDocument) MessageType() string {
	return "identityDocument"
}

// NewIDentityDocument creates a new IDentityDocument
//
// @param number Document number; 1-24 characters
// @param expiryDate Document expiry date; may be null
// @param frontSide Front side of the document
// @param reverseSide Reverse side of the document; only for driver license and identity card
// @param selfie Selfie with the document; may be null
// @param translation List of files containing a certified English translation of the document
func NewIDentityDocument(number string, expiryDate *Date, frontSide *DatedFile, reverseSide *DatedFile, selfie *DatedFile, translation []DatedFile) *IDentityDocument {
	iDentityDocumentTemp := IDentityDocument{
		tdCommon:    tdCommon{Type: "identityDocument"},
		Number:      number,
		ExpiryDate:  expiryDate,
		FrontSide:   frontSide,
		ReverseSide: reverseSide,
		Selfie:      selfie,
		Translation: translation,
	}

	return &iDentityDocumentTemp
}
