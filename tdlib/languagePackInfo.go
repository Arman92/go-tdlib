// AUTOGENERATED - DO NOT EDIT

package tdlib

// LanguagePackInfo Contains information about a language pack
type LanguagePackInfo struct {
	tdCommon
	ID                    string `json:"id"`                      // Unique language pack identifier
	BaseLanguagePackID    string `json:"base_language_pack_id"`   // Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it should be fetched from base language pack. Unsupported in custom language packs
	Name                  string `json:"name"`                    // Language name
	NativeName            string `json:"native_name"`             // Name of the language in that language
	PluralCode            string `json:"plural_code"`             // A language code to be used to apply plural forms. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more info
	IsOfficial            bool   `json:"is_official"`             // True, if the language pack is official
	IsRtl                 bool   `json:"is_rtl"`                  // True, if the language pack strings are RTL
	IsBeta                bool   `json:"is_beta"`                 // True, if the language pack is a beta language pack
	IsInstalled           bool   `json:"is_installed"`            // True, if the language pack is installed by the current user
	TotalStringCount      int32  `json:"total_string_count"`      // Total number of non-deleted strings from the language pack
	TranslatedStringCount int32  `json:"translated_string_count"` // Total number of translated strings from the language pack
	LocalStringCount      int32  `json:"local_string_count"`      // Total number of non-deleted strings from the language pack available locally
	TranslationURL        string `json:"translation_url"`         // Link to language translation interface; empty for custom local language packs
}

// MessageType return the string telegram-type of LanguagePackInfo
func (languagePackInfo *LanguagePackInfo) MessageType() string {
	return "languagePackInfo"
}

// NewLanguagePackInfo creates a new LanguagePackInfo
//
// @param iD Unique language pack identifier
// @param baseLanguagePackID Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it should be fetched from base language pack. Unsupported in custom language packs
// @param name Language name
// @param nativeName Name of the language in that language
// @param pluralCode A language code to be used to apply plural forms. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more info
// @param isOfficial True, if the language pack is official
// @param isRtl True, if the language pack strings are RTL
// @param isBeta True, if the language pack is a beta language pack
// @param isInstalled True, if the language pack is installed by the current user
// @param totalStringCount Total number of non-deleted strings from the language pack
// @param translatedStringCount Total number of translated strings from the language pack
// @param localStringCount Total number of non-deleted strings from the language pack available locally
// @param translationURL Link to language translation interface; empty for custom local language packs
func NewLanguagePackInfo(iD string, baseLanguagePackID string, name string, nativeName string, pluralCode string, isOfficial bool, isRtl bool, isBeta bool, isInstalled bool, totalStringCount int32, translatedStringCount int32, localStringCount int32, translationURL string) *LanguagePackInfo {
	languagePackInfoTemp := LanguagePackInfo{
		tdCommon:              tdCommon{Type: "languagePackInfo"},
		ID:                    iD,
		BaseLanguagePackID:    baseLanguagePackID,
		Name:                  name,
		NativeName:            nativeName,
		PluralCode:            pluralCode,
		IsOfficial:            isOfficial,
		IsRtl:                 isRtl,
		IsBeta:                isBeta,
		IsInstalled:           isInstalled,
		TotalStringCount:      totalStringCount,
		TranslatedStringCount: translatedStringCount,
		LocalStringCount:      localStringCount,
		TranslationURL:        translationURL,
	}

	return &languagePackInfoTemp
}
