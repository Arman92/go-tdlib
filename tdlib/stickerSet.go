// AUTOGENERATED - DO NOT EDIT

package tdlib

// StickerSet Represents a sticker set
type StickerSet struct {
	tdCommon
	ID          JSONInt64  `json:"id"`           // Identifier of the sticker set
	Title       string     `json:"title"`        // Title of the sticker set
	Name        string     `json:"name"`         // Name of the sticker set
	Thumbnail   *Thumbnail `json:"thumbnail"`    // Sticker set thumbnail in WEBP or TGS format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed
	IsInstalled bool       `json:"is_installed"` // True, if the sticker set has been installed by the current user
	IsArchived  bool       `json:"is_archived"`  // True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously
	IsOfficial  bool       `json:"is_official"`  // True, if the sticker set is official
	IsAnimated  bool       `json:"is_animated"`  // True, is the stickers in the set are animated
	IsMasks     bool       `json:"is_masks"`     // True, if the stickers in the set are masks
	IsViewed    bool       `json:"is_viewed"`    // True for already viewed trending sticker sets
	Stickers    []Sticker  `json:"stickers"`     // List of stickers in this set
	Emojis      []Emojis   `json:"emojis"`       // A list of emoji corresponding to the stickers in the same order. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object
}

// MessageType return the string telegram-type of StickerSet
func (stickerSet *StickerSet) MessageType() string {
	return "stickerSet"
}

// NewStickerSet creates a new StickerSet
//
// @param iD Identifier of the sticker set
// @param title Title of the sticker set
// @param name Name of the sticker set
// @param thumbnail Sticker set thumbnail in WEBP or TGS format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed
// @param isInstalled True, if the sticker set has been installed by the current user
// @param isArchived True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously
// @param isOfficial True, if the sticker set is official
// @param isAnimated True, is the stickers in the set are animated
// @param isMasks True, if the stickers in the set are masks
// @param isViewed True for already viewed trending sticker sets
// @param stickers List of stickers in this set
// @param emojis A list of emoji corresponding to the stickers in the same order. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object
func NewStickerSet(iD JSONInt64, title string, name string, thumbnail *Thumbnail, isInstalled bool, isArchived bool, isOfficial bool, isAnimated bool, isMasks bool, isViewed bool, stickers []Sticker, emojis []Emojis) *StickerSet {
	stickerSetTemp := StickerSet{
		tdCommon:    tdCommon{Type: "stickerSet"},
		ID:          iD,
		Title:       title,
		Name:        name,
		Thumbnail:   thumbnail,
		IsInstalled: isInstalled,
		IsArchived:  isArchived,
		IsOfficial:  isOfficial,
		IsAnimated:  isAnimated,
		IsMasks:     isMasks,
		IsViewed:    isViewed,
		Stickers:    stickers,
		Emojis:      emojis,
	}

	return &stickerSetTemp
}
