// AUTOGENERATED - DO NOT EDIT

package tdlib

import (
	"encoding/json"
)

// SponsoredMessage Describes a sponsored message
type SponsoredMessage struct {
	tdCommon
	ID             int32          `json:"id"`              // Unique sponsored message identifier
	SponsorChatID  int64          `json:"sponsor_chat_id"` // Chat identifier
	StartParameter string         `json:"start_parameter"` // Parameter for the bot start message if the sponsored chat is a chat with a bot
	Content        MessageContent `json:"content"`         // Content of the message
}

// MessageType return the string telegram-type of SponsoredMessage
func (sponsoredMessage *SponsoredMessage) MessageType() string {
	return "sponsoredMessage"
}

// NewSponsoredMessage creates a new SponsoredMessage
//
// @param iD Unique sponsored message identifier
// @param sponsorChatID Chat identifier
// @param startParameter Parameter for the bot start message if the sponsored chat is a chat with a bot
// @param content Content of the message
func NewSponsoredMessage(iD int32, sponsorChatID int64, startParameter string, content MessageContent) *SponsoredMessage {
	sponsoredMessageTemp := SponsoredMessage{
		tdCommon:       tdCommon{Type: "sponsoredMessage"},
		ID:             iD,
		SponsorChatID:  sponsorChatID,
		StartParameter: startParameter,
		Content:        content,
	}

	return &sponsoredMessageTemp
}

// UnmarshalJSON unmarshal to json
func (sponsoredMessage *SponsoredMessage) UnmarshalJSON(b []byte) error {
	var objMap map[string]*json.RawMessage
	err := json.Unmarshal(b, &objMap)
	if err != nil {
		return err
	}
	tempObj := struct {
		tdCommon
		ID             int32  `json:"id"`              // Unique sponsored message identifier
		SponsorChatID  int64  `json:"sponsor_chat_id"` // Chat identifier
		StartParameter string `json:"start_parameter"` // Parameter for the bot start message if the sponsored chat is a chat with a bot

	}{}
	err = json.Unmarshal(b, &tempObj)
	if err != nil {
		return err
	}

	sponsoredMessage.tdCommon = tempObj.tdCommon
	sponsoredMessage.ID = tempObj.ID
	sponsoredMessage.SponsorChatID = tempObj.SponsorChatID
	sponsoredMessage.StartParameter = tempObj.StartParameter

	fieldContent, _ := unmarshalMessageContent(objMap["content"])
	sponsoredMessage.Content = fieldContent

	return nil
}
