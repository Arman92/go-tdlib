// AUTOGENERATED - DO NOT EDIT

package client

import (
	"encoding/json"
	"fmt"

	"github.com/Arman92/go-tdlib/v2/tdlib"
)

// GetMessageFileType Returns information about a file with messages exported from another app
// @param messageFileHead Beginning of the message file; up to 100 first lines
func (client *Client) GetMessageFileType(messageFileHead string) (tdlib.MessageFileType, error) {
	result, err := client.SendAndCatch(tdlib.UpdateData{
		"@type":             "getMessageFileType",
		"message_file_head": messageFileHead,
	})

	if err != nil {
		return nil, err
	}

	if result.Data["@type"].(string) == "error" {
		return nil, tdlib.RequestError{Code: int(result.Data["code"].(float64)), Message: result.Data["message"].(string)}
	}

	switch tdlib.MessageFileTypeEnum(result.Data["@type"].(string)) {

	case tdlib.MessageFileTypePrivateType:
		var messageFileType tdlib.MessageFileTypePrivate
		err = json.Unmarshal(result.Raw, &messageFileType)
		return &messageFileType, err

	case tdlib.MessageFileTypeGroupType:
		var messageFileType tdlib.MessageFileTypeGroup
		err = json.Unmarshal(result.Raw, &messageFileType)
		return &messageFileType, err

	case tdlib.MessageFileTypeUnknownType:
		var messageFileType tdlib.MessageFileTypeUnknown
		err = json.Unmarshal(result.Raw, &messageFileType)
		return &messageFileType, err

	default:
		return nil, fmt.Errorf("Invalid type")
	}
}
